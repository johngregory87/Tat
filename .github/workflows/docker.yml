name: Build & Publish Docker image
on:
  release:
    types: [ created ]
    secrets:
      DOCKER_USERNAME:
        required: true
      DOCKER_TOKEN:
        required: true
  workflow_dispatch:
    inputs:
      version:
        type: string
        description: Version number
        required: true
jobs:
  publish:
    name: Build & Publish to DockerHub and GitHub Packages
    runs-on: ubuntu-20.04  # Node issues with arm v7 with latest: https://github.com/parse-community/parse-server/pull/8905
    if: contains(github.event.head_commit.message, '[no build]') == false
    strategy:
      matrix:
        arch: [ 'linux/amd64', 'linux/armhf', 'linux/arm64' ]
    steps:
      - name: Matrix => (${{ matrix.arch }} )
        run: |
          echo ${{ matrix.arch }}

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Establish variables
        id: vars
        run: |
          echo "version=${{ github.event.inputs.version || github.event.release.tag_name }}" >> "$GITHUB_OUTPUT"
          echo "today=$(date +'%Y-%m-%d')" >> "$GITHUB_OUTPUT"
          echo "year=$(date +'%Y')" >> "$GITHUB_OUTPUT"

      - name: Display variables
        run: |
          echo "Version: ${{ steps.vars.outputs.version }}"
          echo "Today: ${{ steps.vars.outputs.today }}"
          echo "Year: ${{ steps.vars.outputs.year }}"

      - name: Update version number
        uses: jacobtomlinson/gha-find-replace@2.0.0
        with:
          find: "VERSIONADDEDBYGITHUB"
          replace: "${{ steps.vars.outputs.version }}"
          regex: false

      - name: Update copyright year
        uses: jacobtomlinson/gha-find-replace@2.0.0
        with:
          find: "YEARADDEDBYGITHUB"
          replace: "${{ steps.vars.outputs.year }}"
          regex: false

      - name: Update Discord ID
        uses: jacobtomlinson/gha-find-replace@2.0.0
        with:
          find: "DISCORDIDADDEDBYGITHUB"
          replace: "${{ secrets.DISCORD_ID }}"
          regex: false

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        id: docker-buildx

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          builder: ${{ steps.docker-buildx.outputs.name }}
          context: .
          file: ./Dockerfile
          push: true
          platforms: ${{ matrix.arch }}
          tags: |
            nwithan8/tauticord:latest
            nwithan8/tauticord:${{ steps.vars.outputs.version }}
            ghcr.io/nwithan8/tauticord:latest
            ghcr.io/nwithan8/tauticord:${{ steps.vars.outputs.version }}
          labels: |
            org.opencontainers.image.title=tauticord
            org.opencontainers.image.version=${{ steps.vars.outputs.version }}
            org.opencontainers.image.created=${{ steps.vars.outputs.today }}
